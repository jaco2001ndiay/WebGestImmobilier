<!-- model IEnumerable<WebGestImmobilier.Models.Proprietaire> -->
@model PagedList.IPagedList<WebGestImmobilier.Models.Proprietaire>
@using PagedList.Mvc ;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    h2 {
        margin-bottom: 20px;
    }

    .search-container {
        margin-bottom: 20px;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .table th, .table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .table th {
            background-color: #f2f2f2;
        }

    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }

        .pagination > li {
            display: inline;
            margin-right: 5px;
        }

            .pagination > li > a,
            .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.42857143;
                text-decoration: none;
                background-color: #fff;
                border: 1px solid #ddd;
            }
</style>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<!-- inclusion de la barre de recherche -->
@using (Html.BeginForm("Index", "Proprietaires", FormMethod.Get))
{
    <div class="search-container">
        <p>
            Rechercher par nom du proprietaire ou prenom: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Rechercher" />
        </p>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Nom de l'user ", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Identifiant Proprietaire", "Index", new { sortOrder = ViewBag.PrenomSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Utilisateures.nomUsers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NomPropri)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Idproprietarie }) |
                @Html.ActionLink("Details", "Details", new { id = item.Idproprietarie }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Idproprietarie })
            </td>
        </tr>
    }

</table>
<br />
  Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


